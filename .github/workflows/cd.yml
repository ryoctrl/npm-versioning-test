name: CD

on:
  workflow_dispatch:
  pull_request:
    branches: [master]
    types: [closed]

jobs:
  versioning:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.set_version.outputs.new_version }}
    env:
      YARN_OPTION: --patch
    steps:
      - uses: actions/checkout@v2

      - name: Set yarn option
        if: |
          contains(github.event.pull_request.labels.*.name, 'enhancement')
        run: |
          env 'YARN_OPTION=--minor' >> $GITHUB_ENV

      - name: Bump version
        uses: borales/actions-yarn@v2.3.0
        with:
          cmd: version --no-git-tag-version ${{ env.YARN_OPTION }}

      - name: Set new version environment
        id: set_version
        run: |
          version=$(jq -r '.version' package.json)
          echo "::set-output name=new_version::${version}"

      - name: Push new version
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
        run: |
          message='[skip ci] Application update to ${{ steps.set_version.outputs.new_version }}'

          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git branch
          git fetch
          git checkout develop
          git add .
          git commit -m '${message}'
          git push origin develop
          PR_URL=$(gh pr create -t "${message}" -B master -l bot --fill)
          gh pr merge ${PR_URL} -m

      - name: Tagging new version
        uses: mathieudutour/github-tag-action@v6.0
        id: tag_version
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.set_version.outputs.new_version }}

      - name: Create a Github release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.set_version.outputs.new_version }}
          name: Release ${{ steps.set_version.outputs.new_version }}
          body: ${{ github.event.pull_request.body }}

  notify-deploy-succeeded:
    name: Notify to Slack
    runs-on: ubuntu-latest
    needs:
      - versioning
    steps:
      - name: echo version
        run: |
          echo The new version is ${{ needs.versioning.outputs.new_version }}
